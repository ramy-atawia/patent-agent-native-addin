{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red115\green207\blue184;\red20\green20\blue20;\red207\green214\blue228;
\red131\green178\blue248;\red218\green124\blue212;\red114\green201\blue195;\red233\green160\blue109;\red205\green204\blue213;
\red255\green255\blue255;\red118\green180\blue255;\red178\green107\blue119;\red153\green132\blue242;\red229\green189\blue123;
}
{\*\expandedcolortbl;;\cssrgb\c51373\c83922\c77255;\cssrgb\c10196\c10196\c10196;\cssrgb\c84706\c87059\c91373;
\cssrgb\c58039\c75686\c98039;\cssrgb\c89020\c58039\c86275;\cssrgb\c50980\c82353\c80784;\cssrgb\c93725\c69020\c50196;\cssrgb\c83922\c83922\c86667;
\cssrgb\c100000\c100000\c100000;\cssrgb\c52941\c76471\c100000;\cssrgb\c75686\c50196\c54118;\cssrgb\c66667\c60784\c96078;\cssrgb\c92157\c78431\c55294;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 axios\cf4 \strokec4 , \{ \cf5 \strokec5 AxiosInstance\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 'axios'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 API_URL\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 '../config/environment'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 getAccessToken\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 './authTokenStore'\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatMessage\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 role:\cf4 \cb3 \strokec4  \cf6 \strokec6 'user'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'assistant'\cf4 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 content:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 timestamp\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatRequest\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 user_message:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 conversation_history:\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatMessage\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 document_content:\cf4 \cb3 \strokec4  \{\cb1 \
\cb3     \cf9 \cb3 \strokec9 text:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf9 \cb3 \strokec9 paragraphs\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf9 \cb3 \strokec9 selection\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \};\cb1 \
\cb3   \cf9 \cb3 \strokec9 session_id\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 null\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 RunResponse\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 run_id:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 session_id:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatResponse\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 response:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;  
\f1\i \cf10 \strokec10 // Changed from 'conversation_response' to 'response'
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf9 \cb3 \strokec9 metadata:\cf4 \cb3 \strokec4  \{\cb1 \
\cb3     \cf9 \cb3 \strokec9 should_draft_claims:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 boolean\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf9 \cb3 \strokec9 has_claims:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 boolean\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf9 \cb3 \strokec9 reasoning:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \};\cb1 \
\cb3   \cf9 \cb3 \strokec9 data\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \{\cb1 \
\cb3     \cf9 \cb3 \strokec9 claims\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf9 \cb3 \strokec9 num_claims\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 number\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \};\cb1 \
\cb3   \cf9 \cb3 \strokec9 session_id\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\

\f1\i \cf10 \cb3 \strokec10 // Prior art search types (simplified E2E structure)
\f0\i0 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 PriorArtPatent\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 patent_number:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 title:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 abstract:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 summary:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 relevance_score:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 number\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 grant_date\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 inventors\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 assignees\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 cpc_classifications\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 claims\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf9 \strokec9 []\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 PriorArtResults\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 query:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 total_found:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 number\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 patents\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 PriorArtPatent\cf9 \strokec9 []\cf4 \cb3 \strokec4 ; 
\f1\i \cf10 \strokec10 // optional; backend now returns a single markdown results string
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf9 \cb3 \strokec9 overall_summary\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 PriorArtResponse\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 results:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ; 
\f1\i \cf10 \strokec10 // markdown string
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf9 \cb3 \strokec9 thought_process:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ; 
\f1\i \cf10 \strokec10 // markdown string
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 StreamEvent\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 event:\cf4 \cb3 \strokec4  \cf6 \strokec6 'status'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'reasoning'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'tool_call'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'tool_result'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'final'\cf4 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf6 \strokec6 'done'\cf4 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 data:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\

\f1\i \cf10 \cb3 \strokec10 // DocumentChange interface removed - not supported by backend
\f0\i0 \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 interface\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ApiError\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf9 \cb3 \strokec9 message:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 code\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf9 \cb3 \strokec9 details\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf7 \cb3 \strokec7 class\cf4 \cb3 \strokec4  \cf11 \cb3 \strokec11 ApiService\cf4 \cb3 \strokec4  \{\cb1 \
\cb3   \cf7 \cb3 \strokec7 private\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 api:\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 AxiosInstance\cf4 \cb3 \strokec4 ;\cb1 \
\cb3   \cf7 \cb3 \strokec7 private\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 baseURL:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ;\cb1 \
\
\cb3   \cf7 \cb3 \strokec7 constructor\cf4 \cb3 \strokec4 () \{\cb1 \
\cb3     \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 baseURL\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 API_URL\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 api\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 axios\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 create\cf4 \cb3 \strokec4 (\{\cb1 \
\cb3       \cf9 \cb3 \strokec9 baseURL:\cf4 \cb3 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 baseURL\cf4 \cb3 \strokec4 ,\cb1 \
\cb3       \cf9 \cb3 \strokec9 timeout:\cf4 \cb3 \strokec4  \cf14 \cb3 \strokec14 30000\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     \});\cb1 \
\
\cb3     
\f1\i \cf10 \strokec10 // Add request interceptor for authentication
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3     \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 interceptors\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 use\cf4 \cb3 \strokec4 ((
\f1\i \cf9 \cb3 \strokec9 config
\f0\i0 \cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \{\cb1 \
\cb3       
\f1\i \cf10 \strokec10 // Use in-memory token store (no browser storage in artifact environments)
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 token\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 getAccessToken\cf4 \cb3 \strokec4 ();\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 token\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 config\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 headers\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 Authorization\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf6 \strokec6 `Bearer \cf2 \strokec2 $\{\cf5 \strokec5 token\cf2 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 ;\cb1 \
\cb3       \}\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf5 \strokec5 config\cf4 \strokec4 ;\cb1 \
\cb3     \});\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \cb3 \strokec7 private\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 handleApiError\cf4 \cb3 \strokec4 (
\f1\i \cf9 \cb3 \strokec9 error
\f0\i0 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 )\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ApiError\cf4 \cb3 \strokec4  \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4 ) \{\cb1 \
\cb3       
\f1\i \cf10 \strokec10 // Server responded with error status
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 message:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 data\cf4 \cb3 \strokec4 ?.\cf13 \cb3 \strokec13 message\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \cf6 \strokec6 `Server error: \cf2 \strokec2 $\{\cf9 \cb3 \strokec9 error.response.\cf13 \strokec13 status\cf2 \cb3 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 code:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 status\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 toString\cf4 \cb3 \strokec4 (),\cb1 \
\cb3         \cf9 \cb3 \strokec9 details:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb1 \strokec4 \
\cb3       \};\cb1 \
\cb3     \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 request\cf4 \cb3 \strokec4 ) \{\cb1 \
\cb3       
\f1\i \cf10 \strokec10 // Request made but no response
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 message:\cf4 \cb3 \strokec4  \cf6 \strokec6 'No response from server. Please check your connection.'\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 code:\cf4 \cb3 \strokec4  \cf6 \strokec6 'NETWORK_ERROR'\cf4 \cb1 \strokec4 \
\cb3       \};\cb1 \
\cb3     \} \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3       
\f1\i \cf10 \strokec10 // Something else happened
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 message:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 error\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 message\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \cf6 \strokec6 'An unexpected error occurred'\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 code:\cf4 \cb3 \strokec4  \cf6 \strokec6 'UNKNOWN_ERROR'\cf4 \cb1 \strokec4 \
\cb3       \};\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Start a new patent drafting run
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 startPatentRun\cf4 \cb3 \strokec4 (
\f1\i \cf9 \cb3 \strokec9 request
\f0\i0 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatRequest\cf4 \cb3 \strokec4 )\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf8 \cb3 \strokec8 RunResponse\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 post\cf4 \cb3 \strokec4 (\cf6 \strokec6 '/api/patent/run'\cf4 \strokec4 , \cf5 \strokec5 request\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf2 \strokec2 throw\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 handleApiError\cf4 \cb3 \strokec4 (\cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Prior art search
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Returns the simplified \{ results, thought_process \} structure from the backend
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 priorArtSearch\cf4 \cb3 \strokec4 (
\f1\i \cf9 \cb3 \strokec9 request
\f0\i0 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Partial\cf4 \cb3 \strokec4 <\cf8 \cb3 \strokec8 ChatRequest\cf4 \cb3 \strokec4 >)\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf8 \cb3 \strokec8 PriorArtResponse\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 post\cf4 \cb3 \strokec4 (\cf6 \strokec6 '/api/patent/prior-art'\cf4 \strokec4 , \cf5 \strokec5 request\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf8 \cb3 \strokec8 PriorArtResponse\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf2 \strokec2 throw\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 handleApiError\cf4 \cb3 \strokec4 (\cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Stream the agent's response using Server-Sent Events (SSE)
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 chatStream\cf4 \cb3 \strokec4 (\cb1 \
\cb3     
\f1\i \cf9 \cb3 \strokec9 request
\f0\i0 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatRequest\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     \cf8 \cb3 \strokec8 onChunk\cf9 \strokec9 :\cf4 \cb3 \strokec4  (
\f1\i \cf9 \cb3 \strokec9 chunk
\f0\i0 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 void\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     \cf8 \cb3 \strokec8 onComplete\cf9 \strokec9 :\cf4 \cb3 \strokec4  (
\f1\i \cf9 \cb3 \strokec9 response
\f0\i0 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatResponse\cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 void\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     \cf8 \cb3 \strokec8 onError\cf9 \strokec9 :\cf4 \cb3 \strokec4  (
\f1\i \cf9 \cb3 \strokec9 error
\f0\i0 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Error\cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 void\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     
\f1\i \cf9 \cb3 \strokec9 signal
\f0\i0 \cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 AbortSignal\cf4 \cb1 \strokec4 \
\cb3   )\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf7 \cb3 \strokec7 void\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       
\f1\i \cf10 \strokec10 // First, start the patent run
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 runResponse\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 startPatentRun\cf4 \cb3 \strokec4 (\cf5 \strokec5 request\cf4 \strokec4 );\cb1 \
\cb3       \cb1 \
\cb3       
\f1\i \cf10 \strokec10 // Then stream the response
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf8 \cb3 \strokec8 fetch\cf4 \cb3 \strokec4 (\cf6 \strokec6 `\cf2 \strokec2 $\{\cf12 \cb3 \strokec12 this\cf9 \strokec9 .\cf13 \strokec13 baseURL\cf2 \cb3 \strokec2 \}\cf6 \strokec6 /api/patent/stream?run_id=\cf2 \strokec2 $\{\cf9 \cb3 \strokec9 runResponse.\cf13 \strokec13 run_id\cf2 \cb3 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 , \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 method:\cf4 \cb3 \strokec4  \cf6 \strokec6 'GET'\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 headers:\cf4 \cb3 \strokec4  \{\cb1 \
\cb3           \cf6 \strokec6 'Authorization'\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf6 \strokec6 `Bearer \cf2 \strokec2 $\{\cf8 \cb3 \strokec8 getAccessToken\cf9 \strokec9 () || \cf6 \cb3 \strokec6 ''\cf2 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 ,\cb1 \
\cb3         \},\cb1 \
\cb3         \cf5 \strokec5 signal\cf4 \strokec4 ,\cb1 \
\cb3       \});\cb1 \
\
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 !response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 ok\cf4 \cb3 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 throw\cf4 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf8 \cb3 \strokec8 Error\cf4 \cb3 \strokec4 (\cf6 \strokec6 `HTTP error! status: \cf2 \strokec2 $\{\cf9 \cb3 \strokec9 response.\cf13 \strokec13 status\cf2 \cb3 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 reader\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 body\cf4 \cb3 \strokec4 ?.\cf8 \cb3 \strokec8 getReader\cf4 \cb3 \strokec4 ();\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 !\cf5 \cb3 \strokec5 reader\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 throw\cf4 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf8 \cb3 \strokec8 Error\cf4 \cb3 \strokec4 (\cf6 \strokec6 'No response body reader available'\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\
\cb3       \cf7 \cb3 \strokec7 let\cf4 \cb3 \strokec4  \cf5 \strokec5 buffer\cf4 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf6 \strokec6 ''\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 decoder\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf8 \cb3 \strokec8 TextDecoder\cf4 \cb3 \strokec4 ();\cb1 \
\cb3       \cf7 \cb3 \strokec7 let\cf4 \cb3 \strokec4  \cf5 \strokec5 finalResponse\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatResponse\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 null\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  null;\cb1 \
\
\cb3       \cf2 \strokec2 while\cf4 \strokec4  (true) \{\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 signal\cf4 \cb3 \strokec4 ?.\cf13 \cb3 \strokec13 aborted\cf4 \cb3 \strokec4 ) \{\cb1 \
\cb3           \cf2 \strokec2 throw\cf4 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf8 \cb3 \strokec8 Error\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Stream aborted by client'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \{ \cf13 \cb3 \strokec13 done\cf4 \cb3 \strokec4 , \cf13 \cb3 \strokec13 value\cf4 \cb3 \strokec4  \} \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf9 \cb3 \strokec9 reader\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 read\cf4 \cb3 \strokec4 ();\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 done\cf4 \strokec4 ) \cf2 \strokec2 break\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf5 \strokec5 buffer\cf4 \strokec4  \cf9 \cb3 \strokec9 +=\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 decoder\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 decode\cf4 \cb3 \strokec4 (\cf5 \strokec5 value\cf4 \strokec4 , \{ \cf9 \cb3 \strokec9 stream:\cf4 \cb3 \strokec4  true \});\cb1 \
\cb3         \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 lines\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 buffer\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 split\cf4 \cb3 \strokec4 (\cf6 \strokec6 '\cf9 \cb3 \strokec9 \\n\cf6 \cb3 \strokec6 '\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 buffer\cf4 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 lines\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 pop\cf4 \cb3 \strokec4 () \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \cf6 \strokec6 ''\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf2 \strokec2 for\cf4 \strokec4  (\cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 line\cf4 \cb3 \strokec4  \cf2 \strokec2 of\cf4 \strokec4  \cf5 \strokec5 lines\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 line\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 startsWith\cf4 \cb3 \strokec4 (\cf6 \strokec6 'data: '\cf4 \strokec4 )) \{\cb1 \
\cb3             \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 content\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 line\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 slice\cf4 \cb3 \strokec4 (\cf14 \cb3 \strokec14 6\cf4 \cb3 \strokec4 ); 
\f1\i \cf10 \strokec10 // Remove 'data: ' prefix
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3             \cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 content\cf4 \strokec4  \cf9 \cb3 \strokec9 ===\cf4 \cb3 \strokec4  \cf6 \strokec6 '\{\}'\cf4 \strokec4 ) \{\cb1 \
\cb3               
\f1\i \cf10 \strokec10 // Stream complete
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 finalResponse\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf9 \cb3 \strokec9 finalResponse\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 session_id\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 runResponse\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 session_id\cf4 \cb3 \strokec4 ;\cb1 \
\cb3                 \cf8 \cb3 \strokec8 onComplete\cf4 \cb3 \strokec4 (\cf5 \strokec5 finalResponse\cf4 \strokec4 );\cb1 \
\cb3               \}\cb1 \
\cb3               \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cb1 \
\cb3             \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3               \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 parsed\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 JSON\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 parse\cf4 \cb3 \strokec4 (\cf5 \strokec5 content\cf4 \strokec4 );\cb1 \
\cb3               \cb1 \
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \cb3 \strokec9 parsed\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4 ) \{\cb1 \
\cb3                 
\f1\i \cf10 \strokec10 // Final event with complete response
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 finalResponse\cf4 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \{\cb1 \
\cb3                   \cf9 \cb3 \strokec9 response:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 parsed\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4 ,\cb1 \
\cb3                   \cf9 \cb3 \strokec9 metadata:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 parsed\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 metadata\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \{\cb1 \
\cb3                     \cf9 \cb3 \strokec9 should_draft_claims:\cf4 \cb3 \strokec4  false,\cb1 \
\cb3                     \cf9 \cb3 \strokec9 has_claims:\cf4 \cb3 \strokec4  false,\cb1 \
\cb3                     \cf9 \cb3 \strokec9 reasoning:\cf4 \cb3 \strokec4  \cf6 \strokec6 ''\cf4 \cb1 \strokec4 \
\cb3                   \},\cb1 \
\cb3                   \cf9 \cb3 \strokec9 data:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 parsed\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4 ,\cb1 \
\cb3                   \cf9 \cb3 \strokec9 session_id:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 runResponse\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 session_id\cf4 \cb1 \strokec4 \
\cb3                 \};\cb1 \
\cb3                 \cb1 \
\cb3                 
\f1\i \cf10 \strokec10 // Stream the response incrementally
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3                 \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 responseText\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 parsed\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4 ;\cb1 \
\cb3                 \cf8 \cb3 \strokec8 onChunk\cf4 \cb3 \strokec4 (\cf5 \strokec5 responseText\cf4 \strokec4 );\cb1 \
\cb3               \}\cb1 \
\cb3             \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 e\cf4 \strokec4 ) \{\cb1 \
\cb3               \cf9 \cb3 \strokec9 console\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 warn\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Failed to parse streaming data:'\cf4 \strokec4 , \cf5 \strokec5 e\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3           \}\cb1 \
\cb3         \}\cb1 \
\cb3       \}\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf8 \cb3 \strokec8 onError\cf4 \cb3 \strokec4 (\cf5 \strokec5 error\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf8 \cb3 \strokec8 Error\cf4 \cb3 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Legacy method for backward compatibility - now uses the patent API
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 chat\cf4 \cb3 \strokec4 (
\f1\i \cf9 \cb3 \strokec9 request
\f0\i0 :\cf4 \cb3 \strokec4  \{ \cf9 \cb3 \strokec9 message:\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ; \cf9 \cb3 \strokec9 document_content\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 ; \cf9 \cb3 \strokec9 session_id\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 null\cf4 \cb3 \strokec4 ; \cf9 \cb3 \strokec9 conversation_history\cf2 \cb3 \strokec2 ?\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatMessage\cf9 \strokec9 []\cf4 \cb3 \strokec4  \})\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf8 \cb3 \strokec8 ChatResponse\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     
\f1\i \cf10 \strokec10 // Convert old format to new format
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3     \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 patentRequest\cf9 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatRequest\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \{\cb1 \
\cb3       \cf9 \cb3 \strokec9 user_message:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 message\cf4 \cb3 \strokec4 ,\cb1 \
\cb3       \cf9 \cb3 \strokec9 conversation_history:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 conversation_history\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 []\cf4 \cb3 \strokec4 ,\cb1 \
\cb3       \cf9 \cb3 \strokec9 document_content:\cf4 \cb3 \strokec4  \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 text:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 document_content\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 ||\cf4 \cb3 \strokec4  \cf6 \strokec6 ''\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 paragraphs:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 document_content\cf4 \cb3 \strokec4  \cf2 \strokec2 ?\cf4 \strokec4  \cf9 \cb3 \strokec9 [request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 document_content\cf9 \strokec9 ]\cf4 \cb3 \strokec4  \cf2 \strokec2 :\cf4 \strokec4  undefined,\cb1 \
\cb3         \cf9 \cb3 \strokec9 selection:\cf4 \cb3 \strokec4  undefined\cb1 \
\cb3       \},\cb1 \
\cb3       \cf9 \cb3 \strokec9 session_id:\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 request\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 session_id\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 runResponse\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 startPatentRun\cf4 \cb3 \strokec4 (\cf5 \strokec5 patentRequest\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf11 \cb3 \strokec11 Promise\cf4 \cb3 \strokec4 ((
\f1\i \cf9 \cb3 \strokec9 resolve
\f0\i0 \cf4 \cb3 \strokec4 , 
\f1\i \cf9 \cb3 \strokec9 reject
\f0\i0 \cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 let\cf4 \cb3 \strokec4  \cf5 \strokec5 finalResponse\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 ChatResponse\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 |\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 null\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  null;\cb1 \
\cb3       \cb1 \
\cb3       \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 chatStream\cf4 \cb3 \strokec4 (\cb1 \
\cb3         \cf5 \strokec5 patentRequest\cf4 \strokec4 ,\cb1 \
\cb3         () \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \{\}, 
\f1\i \cf10 \strokec10 // Don't need chunks for non-streaming version
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         (
\f1\i \cf9 \cb3 \strokec9 response
\f0\i0 \cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \{\cb1 \
\cb3           \cf5 \strokec5 finalResponse\cf4 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf5 \strokec5 response\cf4 \strokec4 ;\cb1 \
\cb3           \cf8 \cb3 \strokec8 resolve\cf4 \cb3 \strokec4 (\cf5 \strokec5 response\cf4 \strokec4 );\cb1 \
\cb3         \},\cb1 \
\cb3         (
\f1\i \cf9 \cb3 \strokec9 error
\f0\i0 \cf4 \cb3 \strokec4 ) \cf7 \cb3 \strokec7 =>\cf4 \cb3 \strokec4  \{\cb1 \
\cb3           \cf8 \cb3 \strokec8 reject\cf4 \cb3 \strokec4 (\cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3       );\cb1 \
\cb3     \});\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 // Document analysis and changes removed - not supported by backend
\f0\i0 \cf4 \cb1 \strokec4 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Check if the backend is healthy and accessible
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 healthCheck\cf4 \cb3 \strokec4 ()\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf7 \cb3 \strokec7 boolean\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf8 \cb3 \strokec8 fetch\cf4 \cb3 \strokec4 (\cf6 \strokec6 `\cf2 \strokec2 $\{\cf12 \cb3 \strokec12 this\cf9 \strokec9 .\cf13 \strokec13 baseURL\cf2 \cb3 \strokec2 \}\cf6 \strokec6 /`\cf4 \strokec4 , \{\cb1 \
\cb3         \cf9 \cb3 \strokec9 method:\cf4 \cb3 \strokec4  \cf6 \strokec6 'GET'\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \cb3 \strokec9 headers:\cf4 \cb3 \strokec4  \{\cb1 \
\cb3           \cf6 \strokec6 'Authorization'\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf6 \strokec6 `Bearer \cf2 \strokec2 $\{\cf8 \cb3 \strokec8 getAccessToken\cf9 \strokec9 () || \cf6 \cb3 \strokec6 ''\cf2 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 ,\cb1 \
\cb3         \},\cb1 \
\cb3       \});\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 ok\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \cb3 \strokec9 console\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 warn\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Health check failed:'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  false;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Get backend status and version information
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 getBackendStatus\cf4 \cb3 \strokec4 ()\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 get\cf4 \cb3 \strokec4 (\cf6 \strokec6 '/'\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \cb3 \strokec9 console\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 warn\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Failed to get backend status:'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  null;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * List all active sessions
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 getSessions\cf4 \cb3 \strokec4 ()\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 get\cf4 \cb3 \strokec4 (\cf6 \strokec6 '/api/sessions'\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \cb3 \strokec9 console\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 warn\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Failed to get sessions:'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  null;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   
\f1\i \cf10 \strokec10 /**
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    * Get detailed information about a specific session
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf10 \cb3 \strokec10    */
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 async\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 getSessionDetails\cf4 \cb3 \strokec4 (
\f1\i \cf9 \cb3 \strokec9 sessionId
\f0\i0 :\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 string\cf4 \cb3 \strokec4 )\cf9 \cb3 \strokec9 :\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 Promise\cf4 \cb3 \strokec4 <\cf7 \cb3 \strokec7 any\cf4 \cb3 \strokec4 > \{\cb1 \
\cb3     \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 response\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf12 \cb3 \strokec12 this\cf4 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 get\cf4 \cb3 \strokec4 (\cf6 \strokec6 `/api/debug/session/\cf2 \strokec2 $\{\cf5 \strokec5 sessionId\cf2 \strokec2 \}\cf6 \strokec6 `\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf9 \cb3 \strokec9 response\cf4 \cb3 \strokec4 .\cf13 \cb3 \strokec13 data\cf4 \cb3 \strokec4 ;\cb1 \
\cb3     \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \cb3 \strokec9 console\cf4 \cb3 \strokec4 .\cf8 \cb3 \strokec8 warn\cf4 \cb3 \strokec4 (\cf6 \strokec6 'Failed to get session details:'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  null;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf7 \cb3 \strokec7 const\cf4 \cb3 \strokec4  \cf13 \cb3 \strokec13 apiService\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 =\cf4 \cb3 \strokec4  \cf2 \strokec2 new\cf4 \strokec4  \cf8 \cb3 \strokec8 ApiService\cf4 \cb3 \strokec4 ();\cb1 \
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf2 \strokec2 default\cf4 \strokec4  \cf5 \strokec5 apiService\cf4 \strokec4 ;\cb1 \
\
	}